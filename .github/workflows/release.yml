name: Release from Changeset PR

on:
  push:
    branches:
      - main
    paths:
      - '**/package.json'
      - '**/CHANGELOG.md'
  workflow_dispatch:
    inputs:
      version:
        description: 'Override version number (optional)'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    # Only run for PRs merged from changesets
    if: contains(github.event.head_commit.message, 'Release version update')
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Get version from package.json
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Find changeset PR
        id: find-pr
        run: |
          # Get the most recent PR that was merged with the changesets title
          PR_NUMBER=$(gh pr list --search "Release version update" --state merged --json number,title,mergedAt --limit 1 | jq -r '.[0].number')

          if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" == "null" ]; then
            echo "No matching PR found. Using commit message for release notes."
            echo "found_pr=false" >> $GITHUB_OUTPUT
            echo "# Release v${{ steps.package-version.outputs.version }}" > release_notes.md
            echo "" >> release_notes.md
            echo "Commit: ${{ github.event.head_commit.message }}" >> release_notes.md
          else
            echo "Found PR #$PR_NUMBER"
            echo "found_pr=true" >> $GITHUB_OUTPUT
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

            # Get the PR body and save it to a file
            gh pr view $PR_NUMBER --json body -q .body > pr_body_raw.md

            # Process PR body to remove the notification text
            cat pr_body_raw.md | awk '
              BEGIN { printing = 0; }
              /This PR was opened by the Changesets/ { printing = 0; }
              /## Releases/ { printing = 1; }
              printing == 1 { print; }
            ' > pr_body_filtered.md

            # If nothing remained after filtering, use the original content
            if [ ! -s pr_body_filtered.md ]; then
              cat pr_body_raw.md > pr_body_filtered.md
              echo "Couldn't filter changelog content, using full PR description"
            fi

            # Create release notes with filtered PR content
            echo "# Release v${{ steps.package-version.outputs.version }}" > release_notes.md
            echo "" >> release_notes.md
            cat pr_body_filtered.md >> release_notes.md
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          name: Release v${{ steps.package-version.outputs.version }}
          body_path: release_notes.md
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
